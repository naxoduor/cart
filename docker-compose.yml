version: "3.3"

networks:
  proxy:       
    external: false
    name: proxy

services:
  mysql_db:
    image: mysql:8.0.19
    restart: unless-stopped
    volumes:
      - db_data:/var/lib/mysql
      - ./database/testdump.sql:/docker-entrypoint-initdb.d/testdump.sql
    env_file:
      - .env
    environment:
      - MYSQL_DATABASE=$MYSQLDB_DATABASE
      - MYSQL_ROOT_PASSWORD=$MYSQLDB_ROOT_PASSWORD
    ports:
      - $MYSQLDB_LOCAL_PORT:$MYSQLDB_DOCKER_PORT
    networks:
      - proxy


  backend:
    build: ./backend
    expose:
      - "8082"
    environment:
      - DB_HOST=mysql_db
      - DB_USER=$MYSQLDB_USER
      - DB_PASSWORD=$MYSQLDB_ROOT_PASSWORD
      - DB_NAME=$MYSQLDB_DATABASE
      - DB_PORT=$MYSQLDB_DOCKER_PORT
    depends_on:
      - mysql_db
    networks:
      - proxy
      
  frontend:
    build: ./frontend
    expose:
      - "80"
    environment:
      - VIRTUAL_HOST=walocho.co.ke
      - VIRTUAL_PATH=/
      - LETSENCRYPT_HOST=walocho.co.ke
      - LETSENCRYPT_EMAIL=naxoduor7@gmail.com
    networks:
      - proxy

  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./certs:/etc/nginx/certs
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx/custom.conf:/etc/nginx/conf.d/custom.conf:ro   # ðŸ‘ˆ mount config
      # - ./vhost.d:/etc/nginx/vhost.d
      # - ./html:/usr/share/nginx/html
    networks:
      - proxy

  nginx-proxy-acme:
    image: nginxproxy/acme-companion
    container_name: nginx-proxy-acme
    restart: unless-stopped
    volumes:
      - ./certs:/etc/nginx/certs
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - nginx-proxy
    networks:
      - proxy
    environment:
      - NGINX_PROXY_CONTAINER=nginx-proxy   # ðŸ‘ˆ must match the container_name above


volumes:
   db_data:

#comment